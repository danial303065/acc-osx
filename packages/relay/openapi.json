{
  "info": {
    "title": "Tspec API",
    "version": "0.0.1",
    "description": ""
  },
  "openapi": "3.0.3",
  "paths": {
    "/callback": {
      "post": {
        "operationId": "CallbackApiSpec_post_/callback",
        "tags": [
          "Callback"
        ],
        "summary": "Call Back of Payment and Shop",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "code": {
                    "type": "number"
                  },
                  "message": {
                    "type": "string"
                  },
                  "data": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/PaymentCallBackData"
                      },
                      {
                        "$ref": "#/components/schemas/ShopCallBackData"
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "code",
                  "data",
                  "message",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCallBackResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/currency/convert": {
      "get": {
        "operationId": "CurrencyApiSpec_get_/v1/currency/convert",
        "tags": [
          "Currency"
        ],
        "summary": "Provide value converted from one currency to another",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICurrencyConvertResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ledger/nonce/{account}": {
      "get": {
        "operationId": "LedgerApiSpec_get_/v1/ledger/nonce/{account}",
        "tags": [
          "Ledger"
        ],
        "summary": "Provide the nonce corresponding to the user's wallet address",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ILedgerNonceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ledger/balance/account/{account}": {
      "get": {
        "operationId": "LedgerApiSpec_get_/v1/ledger/balance/account/{account}",
        "tags": [
          "Ledger"
        ],
        "summary": "Provide the balance corresponding to the user's wallet address",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ILedgerBalanceAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ledger/balance/phone/{phone}": {
      "get": {
        "operationId": "LedgerApiSpec_get_/v1/ledger/balance/phone/{phone}",
        "tags": [
          "Ledger"
        ],
        "summary": "Provide the balance corresponding to the user's phone number",
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ILedgerBalancePhoneResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ledger/balance/phoneHash/{phoneHash}": {
      "get": {
        "operationId": "LedgerApiSpec_get_/v1/ledger/balance/phoneHash/{phoneHash}",
        "tags": [
          "Ledger"
        ],
        "summary": "Provide the balance corresponding to the user's phone number hash",
        "parameters": [
          {
            "name": "phoneHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ILedgerBalancePhoneHashResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/phone/hash/{phone}": {
      "get": {
        "operationId": "LedgerApiSpec_get_/v1/phone/hash/{phone}",
        "tags": [
          "Ledger"
        ],
        "summary": "Provide the hash of phone number",
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPhoneHashResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/account/temporary": {
      "post": {
        "operationId": "PaymentApiSpec_post_/v1/payment/account/temporary",
        "tags": [
          "Payment"
        ],
        "summary": "Provide a temporary address for payment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "description": "Wallet address of user",
                    "type": "string"
                  },
                  "signature": {
                    "description": "Signature of user wallet",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "account",
                  "signature"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAccountTemporaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/info": {
      "get": {
        "operationId": "PaymentApiSpec_get_/v1/payment/info",
        "tags": [
          "Payment"
        ],
        "summary": "Check the user's balance for the amount required to start the payment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/new/open": {
      "post": {
        "operationId": "PaymentApiSpec_post_/v1/payment/new/open",
        "tags": [
          "Payment"
        ],
        "summary": "Open a new payment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "purchaseId": {
                    "description": "ID of Purchase",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Amount to be used for payment (info. decimals are 18)",
                    "type": "string"
                  },
                  "currency": {
                    "description": "Currency symbol for amount to be used for payment",
                    "type": "string"
                  },
                  "shopId": {
                    "description": "ID of shop",
                    "type": "string"
                  },
                  "account": {
                    "description": "Wallet address of user",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "account",
                  "amount",
                  "currency",
                  "purchaseId",
                  "shopId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentNewOpenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/new/close": {
      "post": {
        "operationId": "PaymentApiSpec_post_/v1/payment/new/close",
        "tags": [
          "Payment"
        ],
        "summary": "Close a new payment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "description": "ID of Payment",
                    "type": "string"
                  },
                  "confirm": {
                    "description": "If this value is true, the payment will be processed normally, and if this value is false, all processes that have been processed so far will be canceled.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "confirm",
                  "paymentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentNewCloseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/new/approval": {
      "post": {
        "operationId": "PaymentApiSpec_post_/v1/payment/new/approval",
        "tags": [
          "Payment"
        ],
        "summary": "Approve a new payment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "description": "ID of Payment",
                    "type": "string"
                  },
                  "approval": {
                    "description": "If this value is true, the payment is accepted; if false, the payment is rejected.",
                    "type": "boolean"
                  },
                  "signature": {
                    "description": "Signature of user wallet",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "approval",
                  "paymentId",
                  "signature"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentNewApprovalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/item": {
      "get": {
        "operationId": "PaymentApiSpec_get_/v1/payment/item",
        "tags": [
          "Payment"
        ],
        "summary": "Provider a payment information",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "description": "ID of Payment",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "paymentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/cancel/open": {
      "post": {
        "operationId": "PaymentApiSpec_post_/v1/payment/cancel/open",
        "tags": [
          "Payment"
        ],
        "summary": "Open a cancel payment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "description": "ID of Payment",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "paymentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCancelOpenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/cancel/close": {
      "post": {
        "operationId": "PaymentApiSpec_post_/v1/payment/cancel/close",
        "tags": [
          "Payment"
        ],
        "summary": "Close a cancel payment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "description": "ID of Payment",
                    "type": "string"
                  },
                  "confirm": {
                    "description": "If this value is true, the cancel payment will be processed normally, and if this value is false, all processes that have been processed so far will be canceled.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "confirm",
                  "paymentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCancelCloseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payment/cancel/approval": {
      "post": {
        "operationId": "PaymentApiSpec_post_/v1/payment/cancel/approval",
        "tags": [
          "Payment"
        ],
        "summary": "Approve a cancel payment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "description": "ID of Payment",
                    "type": "string"
                  },
                  "approval": {
                    "description": "If this value is true, the payment is accepted; if false, the payment is rejected.",
                    "type": "boolean"
                  },
                  "signature": {
                    "description": "Signature of user wallet",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "approval",
                  "paymentId",
                  "signature"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCancelApprovalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/provider/register": {
      "post": {
        "operationId": "ProviderApiSpec_post_/v1/provider/register",
        "tags": [
          "Provider"
        ],
        "summary": "Register the provider. To become a point provider, you must first deposit 50,000 tokens",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Wallet address of the provider",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "provider"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IProviderRegisterResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/provider/send/account": {
      "post": {
        "operationId": "ProviderApiSpec_post_/v1/provider/send/account",
        "tags": [
          "Provider"
        ],
        "summary": "Request the ability to provide points to the recipient's wallet address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Wallet address of the provider",
                    "type": "string"
                  },
                  "receiver": {
                    "description": "Wallet address of the receiver",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Point amount to be provided",
                    "type": "string"
                  },
                  "signature": {
                    "description": "Signature of provider or assistant",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "amount",
                  "provider",
                  "receiver",
                  "signature"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IProviderSendAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/provider/send/phoneHash": {
      "post": {
        "operationId": "ProviderApiSpec_post_/v1/provider/send/phoneHash",
        "tags": [
          "Provider"
        ],
        "summary": "Request the ability to provide points to the recipient's phone number hash",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Wallet address of the provider",
                    "type": "string"
                  },
                  "receiver": {
                    "description": "Phone number hash of the receiver",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Point amount to be provided",
                    "type": "string"
                  },
                  "signature": {
                    "description": "Signature of provider or assistant",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "amount",
                  "provider",
                  "receiver",
                  "signature"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IProviderSendPhoneHashResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/provider/assistant/register": {
      "post": {
        "operationId": "ProviderApiSpec_post_/v1/provider/assistant/register",
        "tags": [
          "Provider"
        ],
        "summary": "Register the provider's assistant. The assistant can only process the instructions of the point transfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Wallet address of the provider",
                    "type": "string"
                  },
                  "assistant": {
                    "description": "Wallet address of the assistant",
                    "type": "string"
                  },
                  "signature": {
                    "description": "Signature of provider or assistant",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "assistant",
                  "provider",
                  "signature"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IProviderAssistantRegisterResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/nonce/{account}": {
      "get": {
        "operationId": "ShopApiSpec_get_/v1/shop/nonce/{account}",
        "tags": [
          "Shop"
        ],
        "summary": "Provide the nonce corresponding to the wallet address of the shop owner",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopNonceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/info/{shopId}": {
      "get": {
        "operationId": "ShopApiSpec_get_/v1/shop/info/{shopId}",
        "tags": [
          "Shop"
        ],
        "summary": "Provide shop information",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/list": {
      "get": {
        "operationId": "ShopApiSpec_get_/v1/shop/list",
        "tags": [
          "Shop"
        ],
        "summary": "Provide all shop information",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/update/create": {
      "post": {
        "operationId": "ShopApiSpec_post_/v1/shop/update/create",
        "tags": [
          "Shop"
        ],
        "summary": "Start changing the name and rate symbol of the store. Completed after successful approval of the shop owner",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shopId": {
                    "description": "ID of Shop",
                    "type": "string"
                  },
                  "name": {
                    "description": "New name to be changed of Shop",
                    "type": "string"
                  },
                  "currency": {
                    "description": "New currency symbol to be changed of Shop",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "currency",
                  "name",
                  "shopId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopUpdateCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/update/approval": {
      "post": {
        "operationId": "ShopApiSpec_post_/v1/shop/update/approval",
        "tags": [
          "Shop"
        ],
        "summary": "Approve changing the name and rate symbol of the store.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskId": {
                    "description": "ID of Task",
                    "type": "string"
                  },
                  "approval": {
                    "description": "If this value is true, the change is accepted; if false, the change is rejected.",
                    "type": "boolean"
                  },
                  "signature": {
                    "description": "Signature of shop owner",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "approval",
                  "signature",
                  "taskId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopUpdateApprovalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/status/create": {
      "post": {
        "operationId": "ShopApiSpec_post_/v1/shop/status/create",
        "tags": [
          "Shop"
        ],
        "summary": "Start changing the name and rate symbol of the store. Completed after successful approval of the shop owner",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shopId": {
                    "description": "ID of Shop",
                    "type": "string"
                  },
                  "status": {
                    "description": "Active status of Shop ( 1: ACTIVE, 2: INACTIVE )",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "shopId",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopStatusCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/status/approval": {
      "post": {
        "operationId": "ShopApiSpec_post_/v1/shop/status/approval",
        "tags": [
          "Shop"
        ],
        "summary": "Approve changing the name and rate symbol of the store.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskId": {
                    "description": "ID of Task",
                    "type": "string"
                  },
                  "approval": {
                    "description": "If this value is true, the change is accepted; if false, the change is rejected.",
                    "type": "boolean"
                  },
                  "signature": {
                    "description": "Signature of shop owner",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "approval",
                  "signature",
                  "taskId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopStatusApprovalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/task": {
      "get": {
        "operationId": "ShopApiSpec_get_/v1/shop/task",
        "tags": [
          "Shop"
        ],
        "summary": "Approve changing the name and rate symbol of the store.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskId": {
                    "description": "ID of Task",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "taskId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopTaskResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/refundable/{shopId}": {
      "get": {
        "operationId": "ShopApiSpec_get_/v1/shop/refundable/{shopId}",
        "tags": [
          "Shop"
        ],
        "summary": "Provide shop information",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IShopRefundableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/summary/account/{account}": {
      "get": {
        "operationId": "SummaryApiSpec_get_/v1/summary/account/{account}",
        "tags": [
          "Summary"
        ],
        "summary": "Provide general information corresponding to the user's wallet address",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISummaryAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/summary/shop/{shopId}": {
      "get": {
        "operationId": "SummaryApiSpec_get_/v1/summary/shop/{shopId}",
        "tags": [
          "Summary"
        ],
        "summary": "Provide general information corresponding to the ID of shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISummaryShopResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TaskCallBackRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "code": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentCallBackData"
              },
              {
                "$ref": "#/components/schemas/ShopCallBackData"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data",
          "message",
          "type"
        ]
      },
      "PaymentCallBackData": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "purchaseId": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "shopId": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "paidPoint": {
            "type": "string"
          },
          "paidValue": {
            "type": "string"
          },
          "feePoint": {
            "type": "string"
          },
          "feeValue": {
            "type": "string"
          },
          "totalPoint": {
            "type": "string"
          },
          "totalValue": {
            "type": "string"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/LoyaltyPaymentTaskStatus"
          }
        },
        "additionalProperties": false,
        "required": [
          "account",
          "amount",
          "currency",
          "feePoint",
          "feeValue",
          "paidPoint",
          "paidValue",
          "paymentId",
          "paymentStatus",
          "purchaseId",
          "shopId",
          "totalPoint",
          "totalValue"
        ]
      },
      "LoyaltyPaymentTaskStatus": {
        "type": "number",
        "enum": [
          0,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59
        ]
      },
      "ShopCallBackData": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string"
          },
          "shopId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "account": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "account",
          "currency",
          "name",
          "shopId",
          "status",
          "taskId"
        ]
      },
      "TaskCallBackResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {}
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code"
        ]
      },
      "ICurrencyConvertRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "description": "Amount (info. 1 UNIT = \"1000000000000000000\", decimals is 18",
            "type": "string"
          },
          "from": {
            "description": "Currency Symbol of source (ex acc, point, usd, krw, php, ...)",
            "type": "string"
          },
          "to": {
            "description": "Currency Symbol of target (ex acc, point, usd, krw, php, ...)",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "amount",
          "from",
          "to"
        ]
      },
      "ICurrencyConvertResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "amount": {
                "description": "Value converted to target currency (info. decimals are 18)",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "amount"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "ILedgerNonceResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "account": {
                "description": "Address of wallet",
                "type": "string"
              },
              "nonce": {
                "description": "Nonce for address of wallet",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "nonce"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "ILedgerBalanceAccountResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "account": {
                "description": "Address of wallet",
                "type": "string"
              },
              "point": {
                "type": "object",
                "properties": {
                  "balance": {
                    "description": "Balance of Point (info. decimals are 18)",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of Point (info. decimals are 18)",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "balance",
                  "value"
                ]
              },
              "token": {
                "type": "object",
                "properties": {
                  "balance": {
                    "description": "Balance of Token (info. decimals are 18)",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of Token (info. decimals are 18)",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "balance",
                  "value"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "point",
              "token"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "ILedgerBalancePhoneResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "phone": {
                "description": "Phone Number",
                "type": "string"
              },
              "phoneHash": {
                "description": "Phone Number Hash",
                "type": "string"
              },
              "account": {
                "description": "Address of wallet",
                "type": "string"
              },
              "point": {
                "type": "object",
                "properties": {
                  "balance": {
                    "description": "Balance of Point (info. decimals are 18)",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of Point (info. decimals are 18)",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "balance",
                  "value"
                ]
              },
              "token": {
                "type": "object",
                "properties": {
                  "balance": {
                    "description": "Balance of Token (info. decimals are 18)",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of Token (info. decimals are 18)",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "balance",
                  "value"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "phone",
              "phoneHash",
              "point",
              "token"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "ILedgerBalancePhoneHashResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "phoneHash": {
                "description": "Phone Number Hash",
                "type": "string"
              },
              "account": {
                "description": "Address of wallet",
                "type": "string"
              },
              "point": {
                "type": "object",
                "properties": {
                  "balance": {
                    "description": "Balance of Point (info. decimals are 18)",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of Point (info. decimals are 18)",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "balance",
                  "value"
                ]
              },
              "token": {
                "type": "object",
                "properties": {
                  "balance": {
                    "description": "Balance of Token (info. decimals are 18)",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of Token (info. decimals are 18)",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "balance",
                  "value"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "phoneHash",
              "point",
              "token"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IPhoneHashResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "phone": {
                "description": "Phone Number",
                "type": "string"
              },
              "phoneHash": {
                "description": "Phone Number Hash",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "phone",
              "phoneHash"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentAccountTemporaryRequest": {
        "type": "object",
        "properties": {
          "account": {
            "description": "Wallet address of user",
            "type": "string"
          },
          "signature": {
            "description": "Signature of user wallet",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "account",
          "signature"
        ]
      },
      "PaymentAccountTemporaryResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "temporaryAccount": {
                "description": "Temporary wallet address for payment",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "temporaryAccount"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentInfoResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "account": {
                "description": "Wallet address for payment",
                "type": "string"
              },
              "amount": {
                "description": "Amount to be used for payment (info. decimals are 18)",
                "type": "string"
              },
              "currency": {
                "description": "Currency symbol for amount to be used for payment",
                "type": "string"
              },
              "balance": {
                "description": "User's point balance (info. decimals are 18)",
                "type": "string"
              },
              "balanceValue": {
                "description": "User's point balance converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "paidPoint": {
                "description": "Amount of points to be paid (info. decimals are 18)",
                "type": "string"
              },
              "paidValue": {
                "description": "Amount of points to be paid converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "feePoint": {
                "description": "Fee (info. decimals are 18)",
                "type": "string"
              },
              "feeValue": {
                "description": "Fee converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "totalPoint": {
                "description": "Amount of points to be paid including fees (info. decimals are 18)",
                "type": "string"
              },
              "totalValue": {
                "description": "Amount of points to be paid including fees converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "feeRate": {
                "description": "Fee Rate",
                "type": "number"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "amount",
              "balance",
              "balanceValue",
              "currency",
              "feePoint",
              "feeRate",
              "feeValue",
              "paidPoint",
              "paidValue",
              "totalPoint",
              "totalValue"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentInfoRequest": {
        "type": "object",
        "properties": {
          "account": {
            "description": "Wallet address of user or temporary wallet address of user",
            "type": "string"
          },
          "amount": {
            "description": "Amount to be used for payment (info. decimals are 18)",
            "type": "string"
          },
          "currency": {
            "description": "Currency symbol for amount to be used for payment",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "account",
          "amount",
          "currency"
        ]
      },
      "PaymentNewOpenRequest": {
        "type": "object",
        "properties": {
          "purchaseId": {
            "description": "ID of Purchase",
            "type": "string"
          },
          "amount": {
            "description": "Amount to be used for payment (info. decimals are 18)",
            "type": "string"
          },
          "currency": {
            "description": "Currency symbol for amount to be used for payment",
            "type": "string"
          },
          "shopId": {
            "description": "ID of shop",
            "type": "string"
          },
          "account": {
            "description": "Wallet address of user",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "account",
          "amount",
          "currency",
          "purchaseId",
          "shopId"
        ]
      },
      "PaymentNewOpenResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "description": "ID of Payment",
                "type": "string"
              },
              "purchaseId": {
                "description": "ID of Purchase",
                "type": "string"
              },
              "amount": {
                "description": "Amount to be used for payment (info. decimals are 18)",
                "type": "string"
              },
              "currency": {
                "description": "Currency symbol for amount to be used for payment",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "account": {
                "description": "Wallet address for payment",
                "type": "string"
              },
              "paidPoint": {
                "description": "Amount of points to be paid (info. decimals are 18)",
                "type": "string"
              },
              "paidValue": {
                "description": "Amount of points to be paid converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "feePoint": {
                "description": "Fee (info. decimals are 18)",
                "type": "string"
              },
              "feeValue": {
                "description": "Fee converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "totalPoint": {
                "description": "Amount of points to be paid including fees (info. decimals are 18)",
                "type": "string"
              },
              "totalValue": {
                "description": "Amount of points to be paid including fees converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/LoyaltyPaymentTaskStatus",
                "description": "Progress status of payment task"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "amount",
              "currency",
              "feePoint",
              "feeValue",
              "paidPoint",
              "paidValue",
              "paymentId",
              "paymentStatus",
              "purchaseId",
              "shopId",
              "totalPoint",
              "totalValue"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentNewCloseRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "description": "ID of Payment",
            "type": "string"
          },
          "confirm": {
            "description": "If this value is true, the payment will be processed normally, and if this value is false, all processes that have been processed so far will be canceled.",
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": [
          "confirm",
          "paymentId"
        ]
      },
      "PaymentNewCloseResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "description": "ID of Payment",
                "type": "string"
              },
              "purchaseId": {
                "description": "ID of Purchase",
                "type": "string"
              },
              "amount": {
                "description": "Amount to be used for payment (info. decimals are 18)",
                "type": "string"
              },
              "currency": {
                "description": "Currency symbol for amount to be used for payment",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "account": {
                "description": "Wallet address for payment",
                "type": "string"
              },
              "paidPoint": {
                "description": "Amount of points to be paid (info. decimals are 18)",
                "type": "string"
              },
              "paidValue": {
                "description": "Amount of points to be paid converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "feePoint": {
                "description": "Fee (info. decimals are 18)",
                "type": "string"
              },
              "feeValue": {
                "description": "Fee converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "totalPoint": {
                "description": "Amount of points to be paid including fees (info. decimals are 18)",
                "type": "string"
              },
              "totalValue": {
                "description": "Amount of points to be paid including fees converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/LoyaltyPaymentTaskStatus",
                "description": "Progress status of payment task"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "amount",
              "currency",
              "feePoint",
              "feeValue",
              "paidPoint",
              "paidValue",
              "paymentId",
              "paymentStatus",
              "purchaseId",
              "shopId",
              "totalPoint",
              "totalValue"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentNewApprovalRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "description": "ID of Payment",
            "type": "string"
          },
          "approval": {
            "description": "If this value is true, the payment is accepted; if false, the payment is rejected.",
            "type": "boolean"
          },
          "signature": {
            "description": "Signature of user wallet",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "approval",
          "paymentId",
          "signature"
        ]
      },
      "PaymentNewApprovalResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "description": "ID of Payment",
                "type": "string"
              },
              "purchaseId": {
                "description": "ID of Purchase",
                "type": "string"
              },
              "amount": {
                "description": "Amount to be used for payment (info. decimals are 18)",
                "type": "string"
              },
              "currency": {
                "description": "Currency symbol for amount to be used for payment",
                "type": "string"
              },
              "shopId": {
                "type": "string"
              },
              "account": {
                "description": "Wallet address for payment",
                "type": "string"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/LoyaltyPaymentTaskStatus",
                "description": "Progress status of payment task"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "amount",
              "currency",
              "paymentId",
              "paymentStatus",
              "purchaseId",
              "shopId"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentItemRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "description": "ID of Payment",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "paymentId"
        ]
      },
      "PaymentItemResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "description": "ID of Payment",
                "type": "string"
              },
              "purchaseId": {
                "description": "ID of Purchase",
                "type": "string"
              },
              "amount": {
                "description": "Amount to be used for payment (info. decimals are 18)",
                "type": "string"
              },
              "currency": {
                "description": "Currency symbol for amount to be used for payment",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "account": {
                "description": "Wallet address for payment",
                "type": "string"
              },
              "paidPoint": {
                "description": "Amount of points to be paid (info. decimals are 18)",
                "type": "string"
              },
              "paidValue": {
                "description": "Amount of points to be paid converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "feePoint": {
                "description": "Fee (info. decimals are 18)",
                "type": "string"
              },
              "feeValue": {
                "description": "Fee converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "totalPoint": {
                "description": "Amount of points to be paid including fees (info. decimals are 18)",
                "type": "string"
              },
              "totalValue": {
                "description": "Amount of points to be paid including fees converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/LoyaltyPaymentTaskStatus",
                "description": "Progress status of payment task"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "amount",
              "currency",
              "feePoint",
              "feeValue",
              "paidPoint",
              "paidValue",
              "paymentId",
              "paymentStatus",
              "purchaseId",
              "shopId",
              "totalPoint",
              "totalValue"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentCancelOpenRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "description": "ID of Payment",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "paymentId"
        ]
      },
      "PaymentCancelOpenResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "description": "ID of Payment",
                "type": "string"
              },
              "purchaseId": {
                "description": "ID of Purchase",
                "type": "string"
              },
              "amount": {
                "description": "Amount to be used for payment (info. decimals are 18)",
                "type": "string"
              },
              "currency": {
                "description": "Currency symbol for amount to be used for payment",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "account": {
                "description": "Wallet address for payment",
                "type": "string"
              },
              "paidPoint": {
                "description": "Amount of points to be paid (info. decimals are 18)",
                "type": "string"
              },
              "paidValue": {
                "description": "Amount of points to be paid converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "feePoint": {
                "description": "Fee (info. decimals are 18)",
                "type": "string"
              },
              "feeValue": {
                "description": "Fee converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "totalPoint": {
                "description": "Amount of points to be paid including fees (info. decimals are 18)",
                "type": "string"
              },
              "totalValue": {
                "description": "Amount of points to be paid including fees converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/LoyaltyPaymentTaskStatus",
                "description": "Progress status of payment task"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "amount",
              "currency",
              "feePoint",
              "feeValue",
              "paidPoint",
              "paidValue",
              "paymentId",
              "paymentStatus",
              "purchaseId",
              "shopId",
              "totalPoint",
              "totalValue"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentCancelCloseRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "description": "ID of Payment",
            "type": "string"
          },
          "confirm": {
            "description": "If this value is true, the cancel payment will be processed normally, and if this value is false, all processes that have been processed so far will be canceled.",
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": [
          "confirm",
          "paymentId"
        ]
      },
      "PaymentCancelCloseResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "description": "ID of Payment",
                "type": "string"
              },
              "purchaseId": {
                "description": "ID of Purchase",
                "type": "string"
              },
              "amount": {
                "description": "Amount to be used for payment (info. decimals are 18)",
                "type": "string"
              },
              "currency": {
                "description": "Currency symbol for amount to be used for payment",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "account": {
                "description": "Wallet address for payment",
                "type": "string"
              },
              "paidPoint": {
                "description": "Amount of points to be paid (info. decimals are 18)",
                "type": "string"
              },
              "paidValue": {
                "description": "Amount of points to be paid converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "feePoint": {
                "description": "Fee (info. decimals are 18)",
                "type": "string"
              },
              "feeValue": {
                "description": "Fee converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "totalPoint": {
                "description": "Amount of points to be paid including fees (info. decimals are 18)",
                "type": "string"
              },
              "totalValue": {
                "description": "Amount of points to be paid including fees converted to payment currency (info. decimals are 18)",
                "type": "string"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/LoyaltyPaymentTaskStatus",
                "description": "Progress status of payment task"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "amount",
              "currency",
              "feePoint",
              "feeValue",
              "paidPoint",
              "paidValue",
              "paymentId",
              "paymentStatus",
              "purchaseId",
              "shopId",
              "totalPoint",
              "totalValue"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "PaymentCancelApprovalRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "description": "ID of Payment",
            "type": "string"
          },
          "approval": {
            "description": "If this value is true, the payment is accepted; if false, the payment is rejected.",
            "type": "boolean"
          },
          "signature": {
            "description": "Signature of user wallet",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "approval",
          "paymentId",
          "signature"
        ]
      },
      "PaymentCancelApprovalResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "description": "ID of Payment",
                "type": "string"
              },
              "purchaseId": {
                "description": "ID of Purchase",
                "type": "string"
              },
              "amount": {
                "description": "Amount to be used for payment (info. decimals are 18)",
                "type": "string"
              },
              "currency": {
                "description": "Currency symbol for amount to be used for payment",
                "type": "string"
              },
              "shopId": {
                "type": "string"
              },
              "account": {
                "description": "Wallet address for payment",
                "type": "string"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/LoyaltyPaymentTaskStatus",
                "description": "Progress status of payment task"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "amount",
              "currency",
              "paymentId",
              "paymentStatus",
              "purchaseId",
              "shopId"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IProviderRegisterRequest": {
        "type": "object",
        "properties": {
          "provider": {
            "description": "Wallet address of the provider",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "provider"
        ]
      },
      "IProviderRegisterResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "provider": {
                "description": "Wallet address of the provider",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "provider"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IProviderSendAccountRequest": {
        "type": "object",
        "properties": {
          "provider": {
            "description": "Wallet address of the provider",
            "type": "string"
          },
          "receiver": {
            "description": "Wallet address of the receiver",
            "type": "string"
          },
          "amount": {
            "description": "Point amount to be provided",
            "type": "string"
          },
          "signature": {
            "description": "Signature of provider or assistant",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "amount",
          "provider",
          "receiver",
          "signature"
        ]
      },
      "IProviderSendAccountResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "provider": {
                "description": "Wallet address of the provider",
                "type": "string"
              },
              "receiver": {
                "description": "Wallet address of the receiver",
                "type": "string"
              },
              "amount": {
                "description": "Point amount to be provided",
                "type": "string"
              },
              "txHash": {
                "description": "Hash of transaction",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "amount",
              "provider",
              "receiver",
              "txHash"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IProviderSendPhoneHashRequest": {
        "type": "object",
        "properties": {
          "provider": {
            "description": "Wallet address of the provider",
            "type": "string"
          },
          "receiver": {
            "description": "Phone number hash of the receiver",
            "type": "string"
          },
          "amount": {
            "description": "Point amount to be provided",
            "type": "string"
          },
          "signature": {
            "description": "Signature of provider or assistant",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "amount",
          "provider",
          "receiver",
          "signature"
        ]
      },
      "IProviderSendPhoneHashResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "provider": {
                "description": "Wallet address of the provider",
                "type": "string"
              },
              "receiver": {
                "description": "Phone number hash of the receiver",
                "type": "string"
              },
              "amount": {
                "description": "Point amount to be provided",
                "type": "string"
              },
              "txHash": {
                "description": "Hash of transaction",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "amount",
              "provider",
              "receiver",
              "txHash"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IProviderAssistantRegisterRequest": {
        "type": "object",
        "properties": {
          "provider": {
            "description": "Wallet address of the provider",
            "type": "string"
          },
          "assistant": {
            "description": "Wallet address of the assistant",
            "type": "string"
          },
          "signature": {
            "description": "Signature of provider or assistant",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "assistant",
          "provider",
          "signature"
        ]
      },
      "IProviderAssistantRegisterResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "provider": {
                "description": "Wallet address of the provider",
                "type": "string"
              },
              "assistant": {
                "description": "Wallet address of the assistant",
                "type": "string"
              },
              "txHash": {
                "description": "Hash of transaction",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "assistant",
              "provider",
              "txHash"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IShopNonceResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "account": {
                "description": "Address of wallet",
                "type": "string"
              },
              "nonce": {
                "description": "Nonce for address of wallet",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "nonce"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IShopInfoResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "name": {
                "description": "Name of Shop",
                "type": "string"
              },
              "currency": {
                "description": "Basic currency symbol of Shop",
                "type": "string"
              },
              "status": {
                "description": "Active status of Shop ( 0: None, 1: ACTIVE, 2: INACTIVE )",
                "type": "number"
              },
              "account": {
                "description": "Wallet address of the shop owner",
                "type": "string"
              },
              "delegator": {
                "description": "Wallet address that authorizes cancellation on behalf of the shop owner",
                "type": "string"
              },
              "providedAmount": {
                "description": "Amount of provided",
                "type": "string"
              },
              "usedAmount": {
                "description": "Amount of used",
                "type": "string"
              },
              "refundedAmount": {
                "description": "Amount of refunded",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "currency",
              "delegator",
              "name",
              "providedAmount",
              "refundedAmount",
              "shopId",
              "status",
              "usedAmount"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IShopListRequest": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "description": "Current Page Number",
            "type": "number"
          },
          "pageSize": {
            "description": "Number of items per page",
            "type": "number"
          }
        },
        "additionalProperties": false,
        "required": [
          "pageNumber",
          "pageSize"
        ]
      },
      "IShopListResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IShopListResponseItem"
            }
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IShopListResponseItem": {
        "type": "object",
        "properties": {
          "shopId": {
            "description": "ID of Shop",
            "type": "string"
          },
          "name": {
            "description": "Name of Shop",
            "type": "string"
          },
          "currency": {
            "description": "Basic currency symbol of Shop",
            "type": "string"
          },
          "status": {
            "description": "Active status of Shop ( 0: None, 1: ACTIVE, 2: INACTIVE )",
            "type": "number"
          },
          "account": {
            "description": "Wallet address of the shop owner",
            "type": "string"
          },
          "providedAmount": {
            "description": "Amount of provided",
            "type": "string"
          },
          "usedAmount": {
            "description": "Amount of used",
            "type": "string"
          },
          "refundedAmount": {
            "description": "Amount of refunded",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "account",
          "currency",
          "name",
          "providedAmount",
          "refundedAmount",
          "shopId",
          "status",
          "usedAmount"
        ]
      },
      "IShopUpdateCreateRequest": {
        "type": "object",
        "properties": {
          "shopId": {
            "description": "ID of Shop",
            "type": "string"
          },
          "name": {
            "description": "New name to be changed of Shop",
            "type": "string"
          },
          "currency": {
            "description": "New currency symbol to be changed of Shop",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "currency",
          "name",
          "shopId"
        ]
      },
      "IShopUpdateCreateResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "taskId": {
                "description": "ID of Task",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "name": {
                "description": "New name to be changed of Shop",
                "type": "string"
              },
              "currency": {
                "description": "New currency symbol to be changed of Shop",
                "type": "string"
              },
              "taskStatus": {
                "$ref": "#/components/schemas/ShopTaskStatus",
                "description": "Task progress status ( 11: OPENED, 12: FAILED_TX, 13: REVERTED_TX, 14: SENT_TX, 15: DENIED, 16: COMPLETED )"
              },
              "timestamp": {
                "description": "Task start time",
                "type": "number"
              }
            },
            "additionalProperties": false,
            "required": [
              "currency",
              "name",
              "shopId",
              "taskId",
              "taskStatus",
              "timestamp"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "ShopTaskStatus": {
        "type": "number",
        "enum": [
          0,
          11,
          12,
          13,
          14,
          15,
          16,
          70
        ]
      },
      "IShopUpdateApprovalRequest": {
        "type": "object",
        "properties": {
          "taskId": {
            "description": "ID of Task",
            "type": "string"
          },
          "approval": {
            "description": "If this value is true, the change is accepted; if false, the change is rejected.",
            "type": "boolean"
          },
          "signature": {
            "description": "Signature of shop owner",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "approval",
          "signature",
          "taskId"
        ]
      },
      "IShopUpdateApprovalResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "taskId": {
                "description": "ID of Task",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "name": {
                "description": "New name to be changed of Shop",
                "type": "string"
              },
              "currency": {
                "description": "New currency symbol to be changed of Shop",
                "type": "string"
              },
              "taskStatus": {
                "$ref": "#/components/schemas/ShopTaskStatus",
                "description": "Task progress status ( 11: OPENED, 12: FAILED_TX, 13: REVERTED_TX, 14: SENT_TX, 15: DENIED, 16: COMPLETED )"
              },
              "timestamp": {
                "description": "Task start time",
                "type": "number"
              },
              "txHash": {
                "description": "Hash of transaction",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "currency",
              "name",
              "shopId",
              "taskId",
              "taskStatus",
              "timestamp"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IShopStatusCreateRequest": {
        "type": "object",
        "properties": {
          "shopId": {
            "description": "ID of Shop",
            "type": "string"
          },
          "status": {
            "description": "Active status of Shop ( 1: ACTIVE, 2: INACTIVE )",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "shopId",
          "status"
        ]
      },
      "IShopStatusCreateResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "taskId": {
                "description": "ID of Task",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "status": {
                "description": "Active status of Shop ( 1: ACTIVE, 2: INACTIVE )",
                "type": "number"
              },
              "taskStatus": {
                "$ref": "#/components/schemas/ShopTaskStatus",
                "description": "Task progress status ( 11: OPENED, 12: FAILED_TX, 13: REVERTED_TX, 14: SENT_TX, 15: DENIED, 16: COMPLETED )"
              },
              "timestamp": {
                "description": "Task start time",
                "type": "number"
              }
            },
            "additionalProperties": false,
            "required": [
              "shopId",
              "status",
              "taskId",
              "taskStatus",
              "timestamp"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IShopStatusApprovalRequest": {
        "type": "object",
        "properties": {
          "taskId": {
            "description": "ID of Task",
            "type": "string"
          },
          "approval": {
            "description": "If this value is true, the change is accepted; if false, the change is rejected.",
            "type": "boolean"
          },
          "signature": {
            "description": "Signature of shop owner",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "approval",
          "signature",
          "taskId"
        ]
      },
      "IShopStatusApprovalResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "taskId": {
                "description": "ID of Task",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "status": {
                "description": "Active status of Shop ( 1: ACTIVE, 2: INACTIVE )",
                "type": "number"
              },
              "taskStatus": {
                "$ref": "#/components/schemas/ShopTaskStatus",
                "description": "Task progress status ( 11: OPENED, 12: FAILED_TX, 13: REVERTED_TX, 14: SENT_TX, 15: DENIED, 16: COMPLETED )"
              },
              "timestamp": {
                "description": "Task start time",
                "type": "number"
              },
              "txHash": {
                "description": "Hash of transaction",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "shopId",
              "status",
              "taskId",
              "taskStatus",
              "timestamp"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IShopTaskRequest": {
        "type": "object",
        "properties": {
          "taskId": {
            "description": "ID of Task",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "taskId"
        ]
      },
      "IShopTaskResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "taskId": {
                "description": "ID of Task",
                "type": "string"
              },
              "type": {
                "description": "Type of Task (\"pay_new\", \"pay_cancel\", \"shop_add\", \"shop_update\", \"shop_status\" )",
                "type": "string"
              },
              "shopId": {
                "description": "ID of Shop",
                "type": "string"
              },
              "name": {
                "description": "New name to be changed of Shop",
                "type": "string"
              },
              "currency": {
                "description": "New currency symbol to be changed of Shop",
                "type": "string"
              },
              "status": {
                "description": "Active status of Shop ( 0: None, 1: ACTIVE, 2: INACTIVE )",
                "type": "number"
              },
              "taskStatus": {
                "$ref": "#/components/schemas/ShopTaskStatus",
                "description": "Task progress status ( 11: OPENED, 12: FAILED_TX, 13: REVERTED_TX, 14: SENT_TX, 15: DENIED, 16: COMPLETED )"
              },
              "account": {
                "description": "Wallet address of shop owner",
                "type": "string"
              },
              "timestamp": {
                "description": "Task start time",
                "type": "number"
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "currency",
              "name",
              "shopId",
              "status",
              "taskId",
              "taskStatus",
              "timestamp",
              "type"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "IShopRefundableResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "refundableAmount": {
                "description": "Basic currency amount equivalent to refundable amount",
                "type": "string"
              },
              "refundableToken": {
                "description": "Token amount equivalent to refundable amount",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "refundableAmount",
              "refundableToken"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "ISummaryAccountResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "account": {
                "description": "Address of wallet",
                "type": "string"
              },
              "tokenInfo": {
                "type": "object",
                "properties": {
                  "symbol": {
                    "description": "Symbol of Token",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of Token",
                    "type": "string"
                  },
                  "decimals": {
                    "description": "Decimals of Token",
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "decimals",
                  "name",
                  "symbol"
                ]
              },
              "exchangeRate": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "object",
                    "properties": {
                      "symbol": {
                        "description": "Symbol of Token (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Amount of Token (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "symbol",
                      "value"
                    ]
                  },
                  "currency": {
                    "type": "object",
                    "properties": {
                      "symbol": {
                        "description": "Symbol of Basic Currency (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value for one token (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "symbol",
                      "value"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "currency",
                  "token"
                ]
              },
              "provider": {
                "type": "object",
                "properties": {
                  "enable": {
                    "description": "If true, this account is a point provider.",
                    "type": "boolean"
                  },
                  "assistant": {
                    "description": "Technical representatives to provide points",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "assistant",
                  "enable"
                ]
              },
              "ledger": {
                "type": "object",
                "properties": {
                  "point": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of point in the Ledger (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of point in the Ledger (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of token in the Ledger (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of token in the Ledger (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "point",
                  "token"
                ]
              },
              "mainChain": {
                "type": "object",
                "properties": {
                  "point": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of point in the Main Chain (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of point in the Main Chain (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of token in the Main Chain (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of token in the Main Chain (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "point",
                  "token"
                ]
              },
              "sideChain": {
                "type": "object",
                "properties": {
                  "point": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of point in the Side Chain (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of point in the Side Chain (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of token in the Side Chain (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of token in the Side Chain (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "point",
                  "token"
                ]
              },
              "protocolFees": {
                "type": "object",
                "properties": {
                  "transfer": {
                    "description": "Protocol fees required to use the transfer function (info. decimals is 18)",
                    "type": "string"
                  },
                  "withdraw": {
                    "description": "Protocol fees required to use the withdrawal function (info. decimals is 18)",
                    "type": "string"
                  },
                  "deposit": {
                    "description": "Protocol fees required to use the deposit function (info. decimals is 18)",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "deposit",
                  "transfer",
                  "withdraw"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "account",
              "exchangeRate",
              "ledger",
              "mainChain",
              "protocolFees",
              "provider",
              "sideChain",
              "tokenInfo"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      },
      "ISummaryShopResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Result Code",
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "shopInfo": {
                "type": "object",
                "properties": {
                  "shopId": {
                    "description": "ID of Shop",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of Shop",
                    "type": "string"
                  },
                  "currency": {
                    "description": "Basic currency symbol of Shop",
                    "type": "string"
                  },
                  "status": {
                    "description": "Active status of Shop",
                    "type": "number"
                  },
                  "account": {
                    "description": "Wallet address of the shop owner",
                    "type": "string"
                  },
                  "delegator": {
                    "description": "Wallet address that authorizes cancellation on behalf of the shop owner",
                    "type": "string"
                  },
                  "providedAmount": {
                    "description": "Amount of provided",
                    "type": "string"
                  },
                  "usedAmount": {
                    "description": "Amount of used",
                    "type": "string"
                  },
                  "refundedAmount": {
                    "description": "Amount of refunded",
                    "type": "string"
                  },
                  "refundableAmount": {
                    "description": "Basic currency amount of refundable",
                    "type": "string"
                  },
                  "refundableToken": {
                    "description": "Token amount of refundable",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "account",
                  "currency",
                  "delegator",
                  "name",
                  "providedAmount",
                  "refundableAmount",
                  "refundableToken",
                  "refundedAmount",
                  "shopId",
                  "status",
                  "usedAmount"
                ]
              },
              "tokenInfo": {
                "type": "object",
                "properties": {
                  "symbol": {
                    "description": "Symbol of Token",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of Token",
                    "type": "string"
                  },
                  "decimals": {
                    "description": "Decimals of Token",
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "decimals",
                  "name",
                  "symbol"
                ]
              },
              "exchangeRate": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "object",
                    "properties": {
                      "symbol": {
                        "description": "Symbol of Token (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Amount of Token (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "symbol",
                      "value"
                    ]
                  },
                  "currency": {
                    "type": "object",
                    "properties": {
                      "symbol": {
                        "description": "Symbol of Basic Currency (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value for one token (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "symbol",
                      "value"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "currency",
                  "token"
                ]
              },
              "ledger": {
                "type": "object",
                "properties": {
                  "point": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of point in the Ledger (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of point in the Ledger (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of token in the Ledger (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of token in the Ledger (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "point",
                  "token"
                ]
              },
              "mainChain": {
                "type": "object",
                "properties": {
                  "point": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of point in the Main Chain (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of point in the Main Chain (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of token in the Main Chain (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of token in the Main Chain (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "point",
                  "token"
                ]
              },
              "sideChain": {
                "type": "object",
                "properties": {
                  "point": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of point in the Side Chain (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of point in the Side Chain (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "balance": {
                        "description": "Balance of token in the Side Chain (info. decimals is 18)",
                        "type": "string"
                      },
                      "value": {
                        "description": "Basic Currency Value of token in the Side Chain (info. decimals is 18)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "balance",
                      "value"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "point",
                  "token"
                ]
              },
              "protocolFees": {
                "type": "object",
                "properties": {
                  "transfer": {
                    "description": "Protocol fees required to use the transfer function (info. decimals is 18)",
                    "type": "string"
                  },
                  "withdraw": {
                    "description": "Protocol fees required to use the withdrawal function (info. decimals is 18)",
                    "type": "string"
                  },
                  "deposit": {
                    "description": "Protocol fees required to use the deposit function (info. decimals is 18)",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "deposit",
                  "transfer",
                  "withdraw"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "exchangeRate",
              "ledger",
              "mainChain",
              "protocolFees",
              "shopInfo",
              "sideChain",
              "tokenInfo"
            ]
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "description": "Error Message",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "message"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "data"
        ]
      }
    }
  }
}